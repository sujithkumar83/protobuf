// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: complex.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Example.Complex {

  /// <summary>Holder for reflection information generated from complex.proto</summary>
  public static partial class ComplexReflection {

    #region Descriptor
    /// <summary>File descriptor for complex.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComplexReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1jb21wbGV4LnByb3RvEg9leGFtcGxlLmNvbXBsZXgieQoOQ29tcGxleE1l",
            "c3NhZ2USMAoJb25lX2R1bW15GAIgASgLMh0uZXhhbXBsZS5jb21wbGV4LkR1",
            "bW15TWVzc2FnZRI1Cg5tdWx0aXBsZV9kdW1teRgDIAMoCzIdLmV4YW1wbGUu",
            "Y29tcGxleC5EdW1teU1lc3NhZ2UiKAoMRHVtbXlNZXNzYWdlEgoKAmlkGAEg",
            "ASgFEgwKBG5hbWUYAiABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.Complex.ComplexMessage), global::Example.Complex.ComplexMessage.Parser, new[]{ "OneDummy", "MultipleDummy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.Complex.DummyMessage), global::Example.Complex.DummyMessage.Parser, new[]{ "Id", "Name" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ComplexMessage : pb::IMessage<ComplexMessage> {
    private static readonly pb::MessageParser<ComplexMessage> _parser = new pb::MessageParser<ComplexMessage>(() => new ComplexMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComplexMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.Complex.ComplexReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComplexMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComplexMessage(ComplexMessage other) : this() {
      oneDummy_ = other.oneDummy_ != null ? other.oneDummy_.Clone() : null;
      multipleDummy_ = other.multipleDummy_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComplexMessage Clone() {
      return new ComplexMessage(this);
    }

    /// <summary>Field number for the "one_dummy" field.</summary>
    public const int OneDummyFieldNumber = 2;
    private global::Example.Complex.DummyMessage oneDummy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Example.Complex.DummyMessage OneDummy {
      get { return oneDummy_; }
      set {
        oneDummy_ = value;
      }
    }

    /// <summary>Field number for the "multiple_dummy" field.</summary>
    public const int MultipleDummyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Example.Complex.DummyMessage> _repeated_multipleDummy_codec
        = pb::FieldCodec.ForMessage(26, global::Example.Complex.DummyMessage.Parser);
    private readonly pbc::RepeatedField<global::Example.Complex.DummyMessage> multipleDummy_ = new pbc::RepeatedField<global::Example.Complex.DummyMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Example.Complex.DummyMessage> MultipleDummy {
      get { return multipleDummy_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComplexMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComplexMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OneDummy, other.OneDummy)) return false;
      if(!multipleDummy_.Equals(other.multipleDummy_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneDummy_ != null) hash ^= OneDummy.GetHashCode();
      hash ^= multipleDummy_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oneDummy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OneDummy);
      }
      multipleDummy_.WriteTo(output, _repeated_multipleDummy_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneDummy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OneDummy);
      }
      size += multipleDummy_.CalculateSize(_repeated_multipleDummy_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComplexMessage other) {
      if (other == null) {
        return;
      }
      if (other.oneDummy_ != null) {
        if (oneDummy_ == null) {
          OneDummy = new global::Example.Complex.DummyMessage();
        }
        OneDummy.MergeFrom(other.OneDummy);
      }
      multipleDummy_.Add(other.multipleDummy_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (oneDummy_ == null) {
              OneDummy = new global::Example.Complex.DummyMessage();
            }
            input.ReadMessage(OneDummy);
            break;
          }
          case 26: {
            multipleDummy_.AddEntriesFrom(input, _repeated_multipleDummy_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DummyMessage : pb::IMessage<DummyMessage> {
    private static readonly pb::MessageParser<DummyMessage> _parser = new pb::MessageParser<DummyMessage>(() => new DummyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DummyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.Complex.ComplexReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DummyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DummyMessage(DummyMessage other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DummyMessage Clone() {
      return new DummyMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DummyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DummyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DummyMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
